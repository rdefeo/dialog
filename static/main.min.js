!function () {
    "use strict";
    angular.module("app", ["gettext", "ngRoute", "templates", "ngAnimate", "dialog"]).config(["$routeProvider", function (e) {
        e.otherwise({redirectTo: "/"})
    }]).run(["$rootScope", "gettextCatalog", function (e, i) {
        i.debug = !0
    }])
}(), angular.module("templates", []).run(["$templateCache", function (e) {
    e.put("modules/dialog-entries.html", '<section class="dialog-response dialog-response-type-{{dialogCtrl.responseType}}"><div id=dialog-cell class=dialog-conversation-cell><div id=conversationParent class="dialog-entries col-xs-12"><div ng-animate-children class="dialog-entry row" ng-repeat="entry in dialogCtrl.conversation"><div ng-if=entry.message class=dialog-user-row><div class=dialog-segment-bkg><span class=dialog-row-text>{{entry.message}}</span></div></div><hr class=dialog-line-separator><div ng-class="!entry.responses ? \'watson-thinking\' : \'no-class\'"><div class=dialog-watson-row ng-if="entry != null && entry.responses != null"><div class=dialog-segment-bkg><span class=dialog-row-text ng-bind-html=entry.responses></span></div></div><hr class=dialog-line-separator></div><div ng-if=entry.options style="padding-right: 0px;padding-top: 40px;" class="dialog-user-row dialog-white-bg"><div class="dialog-segment-bkg dialog-white-bg"><span style="padding-right: 0px;" class=dialog-row-text compile=entry.options></span></div></div><div ng-if=entry.movies class=dialog-movie-links-parent><a movie class=dialog-movie content=movie ng-repeat="movie in entry.movies" tabindex=1 ng-keypress=keypressed($event)></a></div></div><div ng-if="dialogCtrl.selectedMovie && dialogCtrl.selectedMovie.commentary" class="dialog-entry row"><div class=dialog-watson-row><div class=dialog-segment-bkg><span class=dialog-row-text ng-bind-html=dialogCtrl.selectedMovie.commentary></span></div></div></div></div></div></section>'), e.put("modules/dialog-full-screen-favorites.html", "<div class=dialog-fullscreen-favorites-list><div class=dialog-fullscreen-header><div class=dialog-favorite-close ng-click=dialogCtrl.toggleFavoritesPanel()></div><favorite-indicator class=dialog-favorite-indicator></favorite-indicator></div><div class=dialog-fullscreen-favorite-scroll><div style=\"background-image: url('{{favorite.posterPath}}');{{favorite.posterPath.search('jpg')?'':'background:#323232'}}\" class=dialog-favorite-full-screen-image ng-if=\"dialogCtrl.getFavorites().length > 0\" ng-repeat=\"favorite in dialogCtrl.getFavorites()\" ng-click=showPreview(favorite) favorite-options><span class=dialog-full-screen-overlay><img class=dialog-fav-del ng-click=dialogCtrl.toggleFavorite(favorite) src=./images/Unfavorite.svg></span><div style=position:absolute; ng-if=\"!(favorite.posterPath.search('jpg'))\"><p class=dialog-favorite-left-movie-poster>{{favorite.movieName}}</p></div></div></div></div>"), e.put("modules/dialog-sidebar-favorites.html", "<div class=dialog-favorites-sidebar><div ng-show=\"dialogCtrl.getFavorites().length == 0\" class=dialog-no-favorites><span class=dialog-no-favorites-text>0 Favorites</span></div><div style=\"background-image: url('{{favorite.posterPath}}');{{favorite.posterPath.search('html')?'':'background:#323232'}}\" class=dialog-favorite-image ng-if=\"dialogCtrl.getFavorites().length > 0\" ng-click=dialogCtrl.selectMovie(favorite) ng-repeat=\"favorite in dialogCtrl.getFavorites()\"><span class=dialog-unfavorite-overlay><img class=dialog-fav-del ng-click=dialogCtrl.toggleFavorite(favorite) src=./images/Unfavorite.svg></span><div style=position:absolute; ng-if=\"!(favorite.posterPath.search('html'))\"><p class=dialog-favorite-left-movie-poster>{{favorite.movieName}}</p></div></div></div>"), e.put("modules/dialog.html", '<section class=dialog-body-{{dialogCtrl.state.class}}><header id=dialog-header class="dialog-header-{{dialogCtrl.state.class}} navbar navbar-fixed-top"><div class=dialog-header-inner><favorite-indicator class={{favoriteIndicatorClass}}><div class=dialog-toggle-favorites-view ng-click=dialogCtrl.toggleFavoritesPanel() style="{{(dialogCtrl.getFavorites() != null && dialogCtrl.getFavorites().length > 0) ? \'cursor: pointer\' : \'\'}}"></div></favorite-indicator><div class=dialog-navbar-txt-img onclick=location.reload();><div class=dialog-navbar-img></div></div></div></header><div class=dialog-scrollable-div id=scrollable-div ng-if="dialogCtrl.state.key !== \'intro\'" resize><div class="container dialog-container-{{dialogCtrl.state.class}}"><div class="dialog-center dialog-center-{{dialogCtrl.state.class}}" ng-include="\'modules/dialog-entries.html\'"></div></div></div><div id=preview-parent class=dialog-preview-parent ng-if="dialogCtrl.getCurrentMovie() && dialogCtrl.getCurrentMovie().movieName != null"><preview class=dialog-preview content=dialogCtrl.selectedMovie></preview></div><div class=dialog-full-screen-favorites ng-if="dialogCtrl.state.key != \'intro\' && dialogCtrl.showFavorites && (dialogCtrl.getFavorites() != null && dialogCtrl.getFavorites().length > 0)" ng-include="\'modules/dialog-full-screen-favorites.html\'"></div><div class=dialog-favorites-sidebar-parent ng-if="dialogCtrl.state.key != \'intro\'" ng-include="\'modules/dialog-sidebar-favorites.html\'"></div><footer class=footer-{{dialogCtrl.state.class}} id=dialog-footer><div class=container><form class=form role=form ng-submit=dialogCtrl.submit()><div class="form-group has-controls dialog-form-group-{{dialogCtrl.state.class}}"><div class=dialog-happy-text-{{dialogCtrl.state.class}}>{{dialogCtrl.state.introText}}</div><table class=dialog-input-table><tr><td class=dialog-input-col><input id=question class="dialog-form-input form-control" type=text placeholder={{dialogCtrl.state.placeholder}} ng-model=dialogCtrl.question autocorrect=off autocomplete=off disabled></td><td class=dialog-resize-col id=resize-footer-col></td></tr></table></div></form></div></footer><div class="dialog-links-parent dialog-links-parent-{{dialogCtrl.state.class}}"><a class=dialog-link href=./legal/WhatsInTheaters_TermsOfUse.html>Terms &amp; Conditions</a> | <a class=dialog-link href="http://www.ibm.com/privacy/us/en/">Privacy</a> | <a class=dialog-link href="http://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/">Built with IBM Watson</a></div></section>'), e.put("modules/home.html", '<div class=dialog-body-{{dialogCtrl.state.class}}><div class=dialog-iheader></div><div class=dialog-welcome>Chat with Watson to discover new and upcoming movies by genre and rating.</div><a ng-click=dialogCtrl.switchToChatting() class=dialog-nextbtn href></a><div class=dialog-ifooter><div class="dialog-links-parent dialog-links-parent-intro"><a class=dialog-link href=./legal/WhatsInTheaters_TermsOfUse.html>Terms &amp; Conditions</a> | <a class=dialog-link href="http://www.ibm.com/privacy/us/en/">Privacy</a> | <a class=dialog-link href="http://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/">Built with IBM Watson</a></div></div></div>')
}]), function () {
    "use strict";
    angular.module("dialog", ["templates", "dialog.service", "dialog.controller", "dialog.resize", "dialog.movie", "dialog.compile", "dialog.favorite", "dialog.rating", "dialog.preview", "dialog.parser", "dialog.showtoggle", "ngAnimate"])
}(), function () {
    "use strict";
    angular.module("dialog.service", []).service("dialogService", ["_", "$http", "$q", "dialogParser", function (e, i, t, o) {
        var a, l, r, n = 0, s = [], c = function () {
            return s
        }, d = function () {
            return s.length > 0 ? s[s.length - 1] : void 0
        }, g = function () {
            var e = !0;
            return a ? t.when({
                clientId: a,
                welcomeMessage: r,
                conversationId: l
            }) : ("undefined" != typeof Storage && localStorage.getItem("firstTimeUser") && (e = !1), i.get("../api/bluemix/initChat", {params: {firstTimeUser: e}}).then(function (e) {
                return "undefined" != typeof Storage && localStorage.setItem("firstTimeUser", "false"), a = e.data.clientId, r = e.data.wdsResponse, l = e.data.conversationId, {
                    clientId: a,
                    welcomeMessage: r,
                    conversationId: l
                }
            }, function (e) {
                var i = e;
                return e ? (i = i.data, {
                    clientId: null,
                    welcomeMessage: i.userErrorMessage,
                    conversationId: null
                }) : void 0
            }))
        }, v = function (e) {
            return i.get("../api/bluemix/postConversation", {
                params: {
                    clientId: a,
                    conversationId: l,
                    input: e
                }
            }).then(function (i) {
                var t = i.data.wdsResponse, a = null, l = null, r = null, n = null;
                return t && (o.isMctInPayload(t) || (t = t.replace(/<br>/g, "")), t = t.replace(/\n+/g, "<br/>")), $.isArray(i.data.movies) && (a = i.data.movies), t || (t = a ? "Here is what I found" : "Oops, this is embarrassing but my system seems to be having trouble at the moment, please try a bit later."), o.isMctInPayload(t) && (r = o.parse(t), l = r.htmlOptions, e = r.question, t = r.watsonResponse), n = {
                    message: e,
                    responses: t,
                    movies: a,
                    options: l
                }
            }, function (i) {
                var t = i.data.userErrorMessage;
                return t || (t = "Failed to get valid response from the Dialog service. Please refresh your browser"), {
                    message: e,
                    responses: t
                }
            })
        }, u = function (e) {
            return s.push({message: e, index: n++}), g().then(function () {
                var i = t.when();
                return i = i.then(function (i) {
                    return i && s.push(i), v(e)
                })
            }, function (e) {
                var i = {};
                i.responses = "Error received from backend system. Please refresh the browser to start again.", s.push(i)
            }).then(function (e) {
                return e && s.forEach(function (i) {
                    i.index === n - 1 && (i.responses = e.responses, i.movies = e.movies, i.options = e.options)
                }), s
            })
        }, p = function (e, t, o) {
            return g().then(function (o) {
                return i.get("../api/bluemix/getSelectedMovieDetails", {
                    params: {
                        clientId: o.clientId,
                        conversationId: o.conversationId,
                        movieName: e,
                        movieId: t
                    }
                }, function (e) {
                    var i = e;
                    e && (i = i.data)
                }).then(function (e) {
                    var i = e.data;
                    return i && (i.movies && i.movies.length > 0 && (i = i.movies[0]), i.commentary = e.data.wdsResponse), i
                }, function (e) {
                    var i = e.data;
                    return i && (e.data.userErrorMessage ? i.commentary = e.data.userErrorMessage : i.commentary = "Failed to retrieve movie details. Please retry later."), i.error = !0, i
                })
            })
        };
        return {getConversation: c, getLatestResponse: d, initChat: g, query: u, getMovieInfo: p}
    }])
}(), function () {
    "use strict";
    angular.module("dialog.preview", []).directive("preview", ["$parse", "$sce", function (e, i) {
        return {
            template: '<div><span class="dialog-drawer-toggle"></span><favorite class="dialog-favorite-sm" content="{{movie}}"></favorite><div class="dialog-preview-scroll"><iframe id="trailerIFrame" class="dialog-trailer" src="{{trustedUrl}}" allowfullscreen frameborder="0"></iframe><h3 id="noTrailerText" class="dialog-trailer-missing dialog-trailer-hidden">No Preview Available</h3><div class="dialog-movie-info-spacing"><div class="dialog-movie-name-rating-spacing"></div><span class="dialog-movie-name-rating"><h3 class="dialog-movie-name">{{movie.movieName}}</h3><span class="dialog-rating-label"><img src="{{certification}}"></span></span><favorite class="dialog-favorite-lg" content="{{movie}}"></favorite><h5 class="dialog-release-label" ng-hide="hideReleaseDate">Release date:<span class="dialog-release-date"> {{movie.localizedDate}}</span></h5><showtoggle></showtoggle><div class="dialog-rating-spacing"></div><rating></rating></div></div>',
            restrict: "E",
            link: function (t, o, a) {
                var l = null, r = null, n = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], s = function () {
                    var e = $(window).height(), i = $("#dialog-header").outerHeight(!0), t = $("#preview-parent")[0].scrollHeight, o = $(".dialog-drawer-toggle").outerHeight(!0), a = 0;
                    a = t === e ? e - (o + 5) : e - (i + o), i + t > e && $(".dialog-preview-scroll").height(a)
                };
                t.hideReleaseDate = !0, t.hideCertification = !0, t.playerClass = "", t.isFavorite = !1, l = $(".dialog-drawer-toggle"), l.bind("touchstart click", function (e) {
                    t.$apply(t.dialogCtrl.clearMovieSelection()), $(window).off("resize", s), e.preventDefault(), e.stopPropagation()
                }), $(window).resize(s), t.$watch(function () {
                    return t.dialogCtrl.getCurrentMovie()
                }, function () {
                    var o = null, l = e(a.content)(t), c = $("#trailerIFrame"), d = $("#noTrailerText");
                    t.movie = l, (l.trailerUrl || l.movieName || l.overview) && (l.trailerUrl ? (o = i.trustAsResourceUrl(l.trailerUrl), t.trustedUrl = o, c.removeClass("dialog-trailer-hidden"), d.addClass("dialog-trailer-hidden")) : (t.trustedUrl = null, c.addClass("dialog-trailer-hidden"), d.removeClass("dialog-trailer-hidden")), l.releaseDate ? (r = new Date(l.releaseDate), l.localizedDate = n[r.getMonth()] + " " + r.getDate() + ", " + r.getFullYear(), t.hideReleaseDate = !1) : t.hideReleaseDate = !0, l.certification && 0 !== l.certification.length ? "R" === l.certification ? t.certification = "images/R.svg" : "G" === l.certification ? t.certification = "images/G.svg" : "PG" === l.certification ? t.certification = "images/PG.svg" : "PG-13" === l.certification && (t.certification = "images/PG-13.svg") : (l.certification = "NR", t.certification = "images/NR.svg"), s())
                }, !0)
            }
        }
    }])
}(), function () {
    "use strict";
    angular.module("dialog.parser", ["lodash"]).factory("dialogParser", function () {
        var e = new RegExp(/(<mct:[^]*?>)/), i = function (i) {
            return e.test(i)
        }, t = function (i) {
            var t = null, o = [], a = !1;
            return e.test(i) && (t = i.match(/^(.*?)(<.*?>)*?<mct:link>/)[1], i = i.replace(/^(.*?)(<.*?>)/g, "$2").trim(), o = i.match(/<mct\:link>([^]*?)<\/mct\:link>/g).map(function (e) {
                var i = ['<a class="dialog-mct-option" ng-click="dialogCtrl.submitLink(\''], t = e.match(/<mct\:input>([^]*?)<\/mct\:input>/)[1];
                return i.push(t.replace(/<[^>]*>/g, "").replace('"', '\\"').replace("'", "\\'")), i.push("')\">"), e = e.replace(/<mct\:input>([^]*?)<\/mct\:input>/, t), t = e.replace(/<mct\:link>(.*)<\/mct\:link>/, "$1"), a || (a = new RegExp(/<br>/i).test(e)), t = t.replace(/<br>/, ""), i.push(t), i.push("</a>"), i.join("")
            })), {htmlOptions: o.join(a ? "<br>" : ""), watsonResponse: t, question: null}
        }, o = function (e) {
            return e.replace(/<br\/>/g, "")
        }, a = function (e) {
            var a = e, l = [a];
            return l = i(a) ? l.map(t) : l.map(o), l[0]
        };
        return {parse: a, isMctInPayload: i}
    })
}(), function () {
    "use strict";
    angular.module("dialog.resize", []).directive("resize", ["$timeout", function (e) {
        return {
            restrict: "A", link: function (i, t) {
                var o = null, a = null, l = null, r = null, n = 0;
                o = e(function () {
                    a = $(window).height(), l = $("#dialog-header").outerHeight(), r = $("#dialog-footer").outerHeight(), n = a - (l + r + 5), t.outerHeight(!0) > n && (t.css("-webkit-overflow-scrolling", "scroll"), t.height(n))
                }, 250), $(window).resize(function () {
                    o && e.cancel(o), o = e(function () {
                        a = $(window).height(), l = $("#dialog-header").outerHeight(), r = $("#dialog-footer").outerHeight(), n = a - (l + r + 5), t.outerHeight(!0) > n ? t.css("-webkit-overflow-scrolling", "touch") : t.css("-webkit-overflow-scrolling", "auto"), t.height(n)
                    }, 250)
                })
            }
        }
    }])
}(), function () {
    "use strict";
    angular.module("dialog.compile", []).directive("compile", ["$parse", "$compile", function (e, i) {
        return {
            restrict: "A", link: function (t, o, a) {
                var l = e(a.compile)(t), r = i(l)(t);
                o.append(r)
            }
        }
    }])
}(), function () {
    "use strict";
    angular.module("dialog.movie", ["ngAnimate"]).directive("movie", ["$parse", "$timeout", function (e, i) {
        return {
            restrict: "A", link: function (t, o, a) {
                var l = e(a.content)(t), r = '<span class="dialog-movie-link">' + l.movieName + "</span>", n = -1, s = null, c = function (e) {
                    t.dialogCtrl.selectMovie(l), e.preventDefault(), e.stopPropagation()
                };
                t.keypressed = function (e) {
                    (13 === e.keyCode || 32 === e.keyCode) && c(e)
                }, o.append(r), $(".watson-thinking").last().find(".dialog-line-separator").css("display", "none"), o.bind("touchstart", function (e) {
                    var i = null;
                    e && e.originalEvent && (i = e.originalEvent.changedTouches[0], n = parseInt(i.pageY))
                }), o.bind("touchend", function (e) {
                    var i = null, t = null;
                    e && e.originalEvent && (i = e.originalEvent.changedTouches[0], t = parseInt(i.pageY), n + 20 >= t && t >= n - 20 && c(e)), n = -1
                }), o.bind("click", c), $(window).height() <= 750 && $.isArray(t.dialogCtrl.conversation) && t.dialogCtrl.conversation[t.dialogCtrl.conversation.length - 1] && t.dialogCtrl.conversation[t.dialogCtrl.conversation.length - 1].movies && $.isArray(t.dialogCtrl.conversation[t.dialogCtrl.conversation.length - 1].movies) && l === t.dialogCtrl.conversation[t.dialogCtrl.conversation.length - 1].movies[0] && (s && i.cancel(s), s = i(function () {
                    o.focus()
                }, 900))
            }
        }
    }])
}(), function () {
    "use strict";
    angular.module("dialog.rating", []).directive("rating", function () {
        return {
            restrict: "E",
            template: '<span class="mreview"><span class="dialog-movie-review">themoviedb.org: </span><span class="dialog-review-value">{{Math.round((movie.popularity)*10)/10}}/10</span><p class="dialog-review-star-rating"><span id="rating"></span></p></span></span>',
            link: function (e, i) {
                e.$watch(function () {
                    return e.dialogCtrl.selectedMovie
                }, function () {
                    var i = 0, t = 0, o = 0, a = 0, l = 0, r = 10, n = 0, s = "", c = '<img class="dialog-review-star" src="images/Full_star.svg">', d = '<img class="dialog-review-star" src="images/Empty_star.svg">', g = '<img class="dialog-review-star" src="images/Half_star.svg">';
                    if (e.dialogCtrl.selectedMovie.popularity > 0) {
                        for (i = parseFloat(e.dialogCtrl.selectedMovie.popularity), t = Math.round(2 * i) / 2, o = parseInt(t.toString().split(".")[0]), a = void 0 === t.toString().split(".")[1] ? 0 : 1, l = r - (o + a), e.Math = Math, n = 0; o > n; n++)s += c + " ";
                        for (n = 0; a > n; n++)s += g + " ";
                        for (n = 0; l > n; n++)s += d + " ";
                        $("#rating").html(s), $(".mreview").css("display", "block")
                    } else $(".mreview").css("display", "none")
                }, !0)
            }
        }
    })
}(), function () {
    "use strict";
    angular.module("dialog.showtoggle", []).directive("showtoggle", ["$compile", function (e) {
        return {
            restrict: "E", link: function (i, t) {
                i.collapsed = !1, i.toggleshow = function () {
                    i.collapsed = !i.collapsed
                }, i.$watch(function () {
                    return i.dialogCtrl.selectedMovie
                }, function () {
                    var o = null, a = null, l = null, r = i.dialogCtrl.selectedMovie.overview, n = 150;
                    r.length > n ? (o = r.substring(0, n), a = r.substring(n, r.length), o = e('<span class="dialog-movie-overview">' + o + "</span>")(i), a = e('<span class="dialog-movie-overview" ng-if="collapsed">' + a + '</span><span>{{!collapsed ? " ..." : ""}}</span>')(i), l = e('<span class="dialog-collapse-text-toggle" ng-click="toggleshow()">{{collapsed ? "[show less]" : "[show more]"}}</span>')(i), t.empty(), t.append(o), t.append(a), t.append(l)) : (t.empty(), t.append('<span class="dialog-movie-overview">' + r + "</span>")), i.collapsed = !1
                }, !0)
            }
        }
    }])
}(), function () {
    "use strict";
    angular.module("dialog.favorite", []).directive("favorite", ["$parse", function (e) {
        return {
            restrict: "E",
            template: '<span ng-click="toggle()" class="{{favoriteClass}}"></span>',
            link: function (i, t, o) {
                i.toggle = function () {
                    var t = e(o.content)(i);
                    i.dialogCtrl.toggleFavorite(t)
                }, i.$watch(function () {
                    return o.content
                }, function () {
                    var t = e(o.content)(i);
                    t && t.favorite ? i.favoriteClass = "dialog-favorite" : i.favoriteClass = "dialog-no-favorite"
                }), i.$watch(function () {
                    return i.dialogCtrl.getFavorites().length
                }, function () {
                    var t = e(o.content)(i);
                    t && t.favorite ? i.favoriteClass = "dialog-favorite" : i.favoriteClass = "dialog-no-favorite"
                })
            }
        }
    }]).directive("favoriteIndicator", function () {
        return {
            restrict: "E", link: function (e) {
                e.favoriteIndicatorClass = "dialog-no-favorite-left", e.$watch(function () {
                    return e.dialogCtrl.getFavorites().length
                }, function () {
                    var i = e.dialogCtrl.getFavorites();
                    i && 0 !== i.length ? e.favoriteIndicatorClass = "dialog-favorite-left" : e.favoriteIndicatorClass = "dialog-no-favorite-left"
                })
            }
        }
    }).directive("favoriteOptions", function () {
        return {
            restrict: "A", link: function (e) {
                e.showPreview = function (i) {
                    e.dialogCtrl.toggleFavoritesPanel(), e.dialogCtrl.selectMovie(i)
                }
            }
        }
    })
}(), function () {
    "use strict";
    var e = function (e, i, t, o, a, l, r, n) {
        var s = this, c = null, d = {
            intro: {
                key: "intro",
                "class": "intro",
                placeholder: "Loading. Please wait...",
                introText: ""
            },
            chatting: {key: "chatting", "class": "chatting", placeholder: "Start typing...", introText: ""},
            preview: {key: "preview", "class": "preview", placeholder: "Start typing...", introText: ""},
            favorites: {key: "favorites", "class": "favorites", placeholder: "Start typing...", introText: ""}
        }, g = function (i) {
            s.state = e.cloneDeep(i)
        };
        s.favorites = [], s.selectedMovies = [], s.selectedMovie = {}, s.showFavorites = !1, s.selectMovie = function (i) {
            var t = null, o = null, a = null, l = null, r = null, c = null, v = null, u = null;
            return i ? (t = i.movieName, o = i.movieId, a = i.popularity, (l = e.find(s.selectedMovies, {
                movieId: o,
                movieName: t
            })) ? (r = e.keys(s.selectedMovie), r && r.forEach(function (e) {
                delete s.selectedMovie[e]
            }), e.assign(s.selectedMovie, l), n.getMovieInfo(t, o, a), u = $("#scrollable-div"), u[0] && u.animate({scrollTop: u[0].scrollHeight}, 1e3), $("#scrollable-div").height() > $("#conversationParent").height() ? ($(".dialog-center").css({top: $("#scrollable-div").height() - $("#conversationParent").height() - 10 + "px"}), g(d.preview), l) : ($(".dialog-center").css({top: "0px"}), g(d.preview), l)) : (v = n.getMovieInfo(t, o, a), void v.then(function (i) {
                return g(i.error === !0 ? d.chatting : d.preview), c = e.keys(s.selectedMovie), c && c.forEach(function (e) {
                    delete s.selectedMovie[e]
                }), e.assign(s.selectedMovie, i), i.error !== !0 && s.selectedMovies.push(i), $("#scrollable-div").animate({scrollTop: $("#scrollable-div")[0].scrollHeight}, 1e3), $("#scrollable-div").height() > $("#conversationParent").height() ? ($(".dialog-center").css({top: $("#scrollable-div").height() - $("#conversationParent").height() - 10 + "px"}), s.selectedMovie) : ($(".dialog-center").css({top: "0px"}), s.selectedMovie)
            }))) : null
        }, s.clearMovieSelection = function () {
            var i = e.keys(s.selectedMovie);
            i && i.forEach(function (e) {
                delete s.selectedMovie[e]
            }), g(d.chatting)
        }, s.getFavorites = function () {
            return s.favorites
        }, s.getCurrentMovie = function () {
            return s.selectedMovie
        }, s.setAsFavorite = function (i, t) {
            var o = e.find(s.selectedMovies, {movieId: i.movieId, movieName: i.movieName});
            return o && (o.favorite = t), i && s.selectedMovie.movieName === i.movieName && s.selectedMovie.movieId === i.movieId && (s.selectedMovie.favorite = t), i && !t ? (e.remove(s.favorites, {
                movieId: i.movieId,
                movieName: i.movieName
            }), void(0 === s.favorites.length && (s.showFavorites = !1))) : (o = e.find(s.favorites, {
                movieId: i.movieId,
                movieName: i.movieName
            }), void(!o && t && s.favorites.unshift(e.clone(i))))
        }, g(d.intro), s.conversation = n.getConversation(), s.question = null, s.placeHolder || (s.placeHolder = function () {
            var e = n.initChat();
            return e.then(function (e) {
                c = e.welcomeMessage, d.intro.introText = c.replace(/\n\n/g, " "), d.intro.placeholder = "Start typing...", $("#question").removeAttr("disabled"), g(d.intro), $("#question").focus()
            })
        }()), s.submit = function () {
            var e = null, i = null, t = null;
            return s.question && 0 !== s.question.length ? (s.conversation.length > 1 && s.conversation[s.conversation.length - 1].options && (s.conversation[s.conversation.length - 1].options = null), s.selectedMovie && (s.selectedMovie.commentary = null), $("#question").attr("disabled", ""), i = l(function () {
                var e = $("#scrollable-div");
                e[0] && (e[0].scrollTop = e[0].scrollHeight)
            }, 500), n.query(s.question, !0).then(function (o) {
                $("#question").removeAttr("disabled"), $("#question").val(""), $.isArray(o) && (o = o[o.length - 1], (!o.movies || $(window).height() > 750) && $("#question").focus()), $("#scrollable-div").prop("clientHeight") < $("#scrollable-div").prop("scrollHeight") ? (e = document.getElementById("resize-footer-col"), e.style.display = "table-cell", t = document.getElementById("dialog-footer"), t.style.overflowY = "scroll", i && l.cancel(i), i = l(function () {
                    var i = $("#scrollable-div");
                    e.style.display = "none", i[0] && (i[0].scrollTop = i[0].scrollHeight)
                }, 500)) : (e = document.getElementById("resize-footer-col"), e.style.display = "table-cell", t = document.getElementById("dialog-footer"), t.style.overflowY = "hidden", i && l.cancel(i), i = l(function () {
                    var i = $("#scrollable-div");
                    e.style.display = "none", i[0] && (i[0].scrollTop = i[0].scrollHeight)
                }, 500))
            }), void delete s.question) : void $("#question").focus()
        }, s.toggleFavorite = function (e) {
            e && (e.favorite ? (e.favorite = !1, s.setAsFavorite(e, !1)) : (e.favorite = !0, s.setAsFavorite(e, !0)))
        }, s.toggleFavoritesPanel = function () {
            s.showFavorites = !s.showFavorites
        }, s.submitLink = function (e) {
            $("#question").val(e), s.question = e, s.submit()
        }, s.switchToChatting = function () {
            o.path("chatting")
        }, t.$on("$viewContentLoaded", function (e, i) {
            c && ($("#question").removeAttr("disabled"), $("#question").focus())
        }), t.$watch(function () {
            return s.conversation
        }, function () {
            e.isEmpty(s.conversation) || 1 === s.conversation.length && (d.intro.introText = s.conversation[0].responses, $("body").addClass("dialog-body-running"), s.state.key !== d.preview.key && g(d.chatting))
        }, !0)
    };
    e.$inject = ["_", "$rootScope", "$scope", "$location", "$anchorScroll", "$timeout", "gettextCatalog", "dialogService"], angular.module("dialog.controller", ["gettext", "lodash", "ngRoute", "ngSanitize", "ngAnimate", "dialog.service"]).config(["$routeProvider", function (e) {
        e.when("/", {
            templateUrl: "modules/home.html",
            reloadOnSearch: !1
        }).when("/chatting", {templateUrl: "modules/dialog.html", reloadOnSearch: !1})
    }]).controller("DialogController", e)
}();